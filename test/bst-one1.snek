; Function to create a binary search tree node with 3 values: value, left subtree, right subtree
(fun (make_node value left right)
  (tuple value left right))

; Function to insert an element into a binary search tree
(fun (insert value tree)
  (if (< value (index tree 1))
    (make_node (index tree 1) (insert value (index tree 2)) (index tree 3))
    (if (> value (index tree 1))
      (make_node (index tree 1) (index tree 3) (insert value (index tree 3)))
      tree)))

; Function to check if an element exists in a binary search tree
(fun (contains? value tree)
  (if (= tree nil)
    false
    (let (node_value (index tree 1)) (
      let (left_tree (index tree 2)) (
        let (right_tree (index tree 3)) (
          if (= value node_value)
          true
          (if (< value node_value)
            (contains? value left_tree)
            (contains? value right_tree))
        )
      )
    ))
  )
)

(contains? 5 (make_node 6 nil nil))

